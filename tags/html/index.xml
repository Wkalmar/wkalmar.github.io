<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>HTML on Bohdan Stupak&#39;s blog</title>
    <link>http://example.org/tags/html/</link>
    <description>Recent content in HTML on Bohdan Stupak&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 19 Aug 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://example.org/tags/html/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Creating Holy Grail Layouts with CSS Grid</title>
      <link>http://example.org/post/creating-holy-grail-layouts-with-css-grid/</link>
      <pubDate>Sun, 19 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/post/creating-holy-grail-layouts-with-css-grid/</guid>
      <description>Introduction The holy grail layout is a layout that consists of fixed width header, footer, left sidebar, right sidebar and fluid hero item as below:
Traditionally, it is composed via negative margins technique.
To be honest, this doesn’t communicate much to me and looks more like a bunch of hacks. Luckily display: grid has arrived which allows to build 2-dimensional layout in more semantically meaningful style.
Markup Let’s define our markup as follows: &amp;lt;div class=&amp;#34;grid&amp;#34;&amp;gt;&amp;lt;header&amp;gt;Header&amp;lt;/header&amp;gt;&amp;lt;aside class=&amp;#34;sidebar-left&amp;#34;&amp;gt;Left Sidebar&amp;lt;/aside&amp;gt;&amp;lt;article&amp;gt;Article&amp;lt;/article&amp;gt;&amp;lt;aside class=&amp;#34;sidebar-right&amp;#34;&amp;gt;Right Sidebar&amp;lt;/aside&amp;gt;&amp;lt;footer&amp;gt;Footer&amp;lt;/footer&amp;gt;&amp;lt;/div&amp;gt;</description>
    </item>
    
    <item>
      <title>Pure CSS Salesforce-like progressbar Control</title>
      <link>http://example.org/post/pure-css-salesforce-like-progressbar-control/</link>
      <pubDate>Sun, 09 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/post/pure-css-salesforce-like-progressbar-control/</guid>
      <description>Introduction This article covers several CSS techniques: using LESS, using display: flex and some CSS hacks.
You can download the complete source code on github.
Using LESS LESS is CSS preprocessor which allows extending CSS with some useful features. You can learn more about it here. In this project, I use LESS variables and functions which as you can see later, allow me to work with colors in a cleaner way.</description>
    </item>
    
  </channel>
</rss>