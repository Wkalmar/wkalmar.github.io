<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Redis on Bohdan Stupak&#39;s blog</title>
    <link>https://wkalmar.github.io/tags/redis/</link>
    <description>Recent content in Redis on Bohdan Stupak&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 19 Jul 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://wkalmar.github.io/tags/redis/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Distributed locking with Redlock.net</title>
      <link>https://wkalmar.github.io/post/leader-election-with-redlock-net/</link>
      <pubDate>Fri, 19 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://wkalmar.github.io/post/leader-election-with-redlock-net/</guid>
      <description>Why locking things Microservice architecture becomes widely adopted these days. One of the benefits it offers is the possibility of horizontal scaling which allows us to increase the performance of our application dramatically. However, there are situations when multiple instances of service face contention for some shared resource. In such a case one of the instances would acquire a lock over this resource claiming exclusive access to it. Let&amp;rsquo;s have a look at some possible use cases when this is helpful.</description>
    </item>
    
  </channel>
</rss>